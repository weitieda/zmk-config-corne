/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>

#define COLEMAK 0
#define NAV 1
#define SYM 2
#define MOUSE 3
#define NUM 4
#define QWERTY 5

&mt {
    tapping-term-ms = <200>;
    quick_tap_ms = <0>;
    flavor = "tap-preferred";
};

&lt {
    tapping-term-ms = <200>;
    quick_tap_ms = <0>;
    flavor = "tap-preferred";
};

/ {
    combos {
        compatible = "zmk,combos";

        vac {
            bindings = <&kp BACKSPACE>;
            key-positions = <3 4>;
            layers = <0>;
        };

        enter {
            bindings = <&kp ENTER>;
            key-positions = <14 15 16>;
            layers = <0>;
        };

        mouse_layer {
            bindings = <&mo 6>;
            key-positions = <38 39>;
        };

        fullscreen {
            bindings = <&kp LG(LA(LC(LS(SPACE))))>;
            key-positions = <25 24>;
            layers = <5>;
        };

        switchapp {
            bindings = <&kp LG(GRAVE)>;
            key-positions = <15 16>;
            layers = <5>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        colemak_dh {
            label = "COLEMAK";

            // -----------------------------------------------------------------------------------------------------------------------------
            // |        |   Q    |   W    |     E     |     R     |     T     | # |     Y     |     U    |    I    |    O   |   P    |     |
            // | LAYERS | A/LGUI | S/LALT |  D/LCTRL  |  F/LSHFT  |     G     | # |     H     | J/LSHFT  | K/LCTRR | L/LALT | ;/LGUI |     |
            // |        |   Z    | X/RALT |     C     |     V     |     B     | # |     N     |     M    |    ,    | ./RALT |   /    |     |
            //                            | ESC/MEDIA | SPACE/NAV | TAB/MOUSE | # | ENTER/SYM | BSPC/NUM | DEL/FN  |

            bindings = <
&tog 3      &kp Q                &kp W       &kp F         &kp P       &kp B          &kp J        &kp L       &kp U         &kp Y       &kp SQT              &kp GRAVE
&kp ESCAPE  &mt RIGHT_CONTROL A  &mt LALT R  &mt LSHIFT S  &mt LGUI T  &kp G          &kp M        &mt LGUI N  &mt LSHIFT E  &mt RALT I  &mt RIGHT_CONTROL O  &kp LS(LA(LC(LG(B))))
&mo 7       &kp Z                &kp X       &kp C         &kp D       &kp V          &kp K        &kp H       &kp COMMA     &kp DOT     &kp FSLH             &kp LS(LA(LC(LG(SQT))))
                                             &lt 2 ESC     &lt 5 TAB   &lt 4 SPACE    &lt 3 ENTER  &lt 2 BSPC  &lt 1 DEL
            >;
        };

        navigation {
            label = "NAV";

            // -------------------------------------------------------------------------------------------
            // |     |      |      |       |       |     | # | REDO  | CUT  | COPY | PASTE | UNDO  |     |
            // |     | LGUI | LALT | LCTRL | LSHFT |     | # | CAPS  | LEFT | DOWN | UP    | RIGHT |     |
            // |     |      | RALT |       |       |     | # | INS   | HOME | PGDN | PGUP  | END   |     |
            //                     |       | HELD  |     | # | ENTER | BSPC | DEL  |

            bindings = <
&trans  &trans            &trans        &trans      &trans    &trans    &kp LG(LS(Z))  &kp LG(C)  &kp UP            &kp LG(V)  &kp LG(LS(Z))  &kp LS(LA(LG(V)))
&trans  &kp LEFT_CONTROL  &kp LEFT_ALT  &kp LSHIFT  &kp LGUI  &trans    &kp LG(X)      &kp LEFT   &kp DOWN          &kp RIGHT  &kp LG(Z)      &trans
&trans  &trans            &trans        &trans      &trans    &trans    &kp INS        &kp HOME   &kp LS(LA(DOWN))  &kp PG_UP  &kp END        &trans
                                        &trans      &trans    &trans    &kp ENTER      &kp BSPC   &kp DEL
            >;
        };

        symbols {
            label = "SYM";

            // ------------------------------------------------------------------------------------
            // |     |  {  |  &  |  *  |  (  |  }  | # |      |       |       |      |      |     |
            // |     |  :  |  $  |  %  |  ^  |  +  | # |      | LSHFT | LCTRL | LALT | LGUI |     |
            // |     |  ~  |  !  |  @  |  #  |  |  | # |      |       |       | RALT |      |     |
            //                   |  (  |  )  |  _  | # | HELD |       |       |

            bindings = <
&kp AT_SIGN  &kp LCTRL        &kp AMPS        &kp COLON          &kp BACKSLASH     &kp RBRC     &trans         &trans             &trans      &trans        &trans            &trans
&kp DOLLAR   &kp EXCLAMATION  &kp EQUAL       &kp DOUBLE_QUOTES  &kp LEFT_BRACE    &kp PLUS     &kp ASTERISK   &kp LGUI           &kp LSHIFT  &kp LEFT_ALT  &kp LEFT_CONTROL  &trans
&kp PERCENT  &kp TILDE        &kp UNDERSCORE  &kp GRAVE          &kp LEFT_BRACKET  &kp HASH     &kp SEMICOLON  &kp RIGHT_BRACKET  &trans      &none         &trans            &trans
                                              &kp LPAR           &kp RPAR          &kp MINUS    &trans         &trans             &trans
            >;
        };

        numbers {
            label = "NUM";

            // -----------------------------------------------------------------------------------
            // |     |  [  |  7  |  8  |  9  |  ]  | # |     |       |       |      |      |     |
            // |     |  ;  |  4  |  5  |  6  |  =  | # |     | LSHFT | LCTRL | LALT | LGUI |     |
            // |     |  `  |  1  |  2  |  3  |  \  | # |     |       |       | RALT |      |     |
            //                   |  .  |  0  |  -  | # |     | HELD  |       |

            bindings = <
&trans  &kp LBKT       &kp N7  &kp N8   &kp N9  &kp RBKT     &trans  &trans    &trans     &trans        &trans            &trans
&trans  &kp SEMICOLON  &kp N4  &kp N5   &kp N6  &kp EQUAL    &trans  &kp LGUI  &kp LSHFT  &kp LEFT_ALT  &kp LEFT_CONTROL  &trans
&trans  &kp GRAVE      &kp N1  &kp N2   &kp N3  &kp BSLH     &trans  &trans    &trans     &kp RALT      &trans            &trans
                               &kp DOT  &kp N0  &kp MINUS    &trans  &trans    &trans
            >;
        };

        xcode {
            label = "xcode";
            bindings = <
&kp LG(N0)          &kp LC(N0)         &kp LG(LS(Y))          &kp LC(NUMBER_4)       &kp LG(LC(G))      &kp LG(LC(R))       &kp LG(LC(LS(A)))  &kp LG(LA(J))  &trans         &trans         &trans  &trans
&kp LG(LC(G))       &kp LG(LS(F))      &kp LG(LS(LC(F)))      &kp LG(LC(LEFT))       &kp LG(LC(RIGHT))  &kp LG(LS(O))       &kp LG(LS(LC(M)))  &kp LG(LC(J))  &kp LG(LC(E))  &kp LG(LC(E))  &trans  &trans
&kp LG(LC(LA(N0)))  &kp LG(LC(LA(I)))  &kp LG(LC(LA(LS(F))))  &kp LG(LS(LC(LA(D))))  &kp LG(LA(LC(D)))  &kp LS(LA(DOWN))    &kp LG(LC(LA(K)))  &trans         &trans         &trans         &trans  &trans
                                                              &trans                 &trans             &trans              &trans             &trans         &trans
            >;
        };

        app {
            bindings = <
&kp LG(LC(NUMBER_6))          &kp LG(LC(NUMBER_1))    &kp LC(LG(NUMBER_2))  &kp LG(LC(NUMBER_3))  &kp LG(LC(NUMBER_4))  &kp LG(LC(N5))            &trans  &trans  &trans          &trans    &trans            &trans
&kp LG(T)                     &kp LG(LS(X))           &kp LG(X)             &kp LG(C)             &kp LG(V)             &kp LG(LC(N7))            &trans  &trans  &kp LEFT_SHIFT  &kp LALT  &kp LEFT_CONTROL  &trans
&kp LG(LC(LA(LS(NUMBER_7))))  &kp LG(LC(LA(LS(N8))))  &kp LG(Z)             &kp LG(LS(Z))         &kp LG(LC(LA(F6)))    &kp LS(LA(LC(LG(F6))))    &trans  &trans  &trans          &trans    &trans            &trans
                                                                            &trans                &trans                &trans                    &trans  &trans  &trans
            >;

            label = "app";
        };

        mouse {
            label = "MOUSE";

            // ------------------------------------------------------------------------------------
            // |     |      |      |       |       |      | # |     |     |     |     |     |     |
            // |     | LGUI | LALT | LCTRL | LSHFT |      | # |     |     |     |     |     |     |
            // |     |      | RALT |       |       |      | # |     |     |     |     |     |     |
            //                     |       |       | HELD | # |     |     |     |

            bindings = <
&trans        &kp LG(Z)         &kp LG(X)     &kp LG(C)  &kp LG(V)  &trans         &trans       &trans     &trans  &trans  &trans  &trans
&trans        &kp LEFT_CONTROL  &kp LEFT_ALT  &kp LSHFT  &kp LGUI   &trans         &trans       &mkp LCLK  &trans  &trans  &trans  &trans
&bt BT_SEL 0  &bt BT_SEL 1      &kp LCTRL     &trans     &trans     &bootloader    &bootloader  &trans     &trans  &trans  &trans  &trans
                                              &trans     &trans     &trans         &trans       &none      &trans
            >;
        };

        media {
            bindings = <
&trans  &trans             &trans        &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans             &trans        &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp C_VOLUME_DOWN  &kp C_VOL_UP  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                                         &trans  &trans  &trans    &trans  &trans  &trans
            >;

            label = "media";
        };
    };

    conditional_layers { compatible = "zmk,conditional-layers"; };
};
