/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    combos {
        compatible = "zmk,combos";

        left_backspace {
            bindings = <&kp BACKSPACE>;
            key-positions = <15 16>;
            layers = <0>;
            timeout-ms = <50>;
        };

        delete_word {
            bindings = <&kp LA(BACKSPACE)>;
            key-positions = <14 15 16>;
        };

        delete_line {
            bindings = <&kp LA(D)>;
            key-positions = <13 14 15 16>;
        };
    };

    behaviors {
        double_tap_stay_on_lower: double_tap_stay_on_lower {
            compatible = "zmk,behavior-tap-dance";
            label = "DOUBLE_TAP_STAY_ON_LOWER";
            #binding-cells = <0>;
            bindings = <&none>, <&mo 1>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp TAB    &kp Q  &kp W  &kp E  &kp R                      &kp T        &kp Y      &kp U          &kp I      &kp O    &kp P     &kp ESCAPE
&kp LCTRL  &kp A  &kp S  &kp D  &kp F                      &kp G        &kp H      &kp J          &kp K      &kp L    &kp SEMI  &kp SQT
&kp LSHFT  &kp Z  &kp X  &kp C  &kp V                      &kp B        &kp N      &kp M          &kp COMMA  &kp DOT  &kp FSLH  &kp LEFT_ALT
                         &mo 1  &double_tap_stay_on_lower  &kp ENTER    &kp SPACE  &kp BACKSPACE  &mo 2
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB           &kp EXCLAMATION  &kp AT        &kp HASH      &kp DOLLAR        &kp PERCENT     &kp CARET       &kp AMPERSAND  &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp NON_US_BACKSLASH  &kp ASTERISK
&kp LEFT_CONTROL  &kp NUMBER_1     &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4      &kp NUMBER_5    &kp MINUS       &kp EQUAL      &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp PIPE              &kp GRAVE
&kp LSHFT         &kp NUMBER_6     &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9      &kp N0          &kp UNDERSCORE  &kp PLUS       &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp TILDE             &kp RIGHT_SHIFT
                                                 &trans        &kp LEFT_COMMAND  &kp ENTER       &kp SPACE       &kp BACKSPACE  &kp RIGHT_COMMAND
            >;
        };

        upper_layer {
            bindings = <
&trans            &kp F1        &trans        &trans        &trans        &trans              &trans  &trans          &kp UP_ARROW    &trans           &trans  &trans
&kp LEFT_CONTROL  &kp C_PREV    &kp C_NEXT    &kp C_VOL_DN  &kp C_VOL_UP  &kp C_PLAY_PAUSE    &trans  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &trans  &trans
&kp LEFT_SHIFT    &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4        &trans  &trans          &trans          &trans           &trans  &kp CLCK
                                              &trans        &trans        &trans              &trans  &trans          &trans
            >;
        };
    };
};
